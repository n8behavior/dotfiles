#!/usr/bin/env bash

set -e

install-common-packages()
{
	echo 'INSTALLING: common-packages'
	sudo apt install -y build-essential gnupg curl tmux git{,-lfs,-extras} etckeeper xdg-utils software-properties-common tmuxp fuse &>/dev/null
	git lfs install &>/dev/null
}

install-github-cli()
{
	echo 'INSTALLING: GitHub CLI'
	type -p curl >/dev/null || install-common-packages
	curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg &>/dev/null
	sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
	echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list &> /dev/null
	sudo apt install gh -y &>/dev/null
	gh auth login
}

install-nvm()
{
	echo 'INSTALLING: Node Version Manager'
	type -p curl >/dev/null || install-common-packages
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash &>/dev/null
	export NVM_DIR="$HOME/.nvm"
	[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh" &>/dev/null
	nvm install --lts &>/dev/null
	nvm install-latest-npm &>/dev/null
}

setup-editor()
{
	echo 'INSTALLING: Neovim'
	type -p gh >/dev/null || install-github-cli
	gh release download --repo neovim/neovim --pattern *appimage
	mv nvim.appimage .local/bin
	chmod +x .local/bin/nvim.appimage
	sudo update-alternatives --install /usr/bin/editor editor ~/.local/bin/nvim.appimage 60
	sudo update-alternatives --auto editor
}

install-yubikey-manager()
{ 
	echo 'INSTALLING: Yubikey Mangager'
	type -p add-apt-repository &>/dev/null || install-common-packages
	sudo add-apt-repository --yes ppa:yubico/stable &>/dev/null
	sudo apt install -y yubikey-manager &>/dev/null
}

setup-rust()
{
	type -p rustup &>/dev/null || {
		echo "INSTALLING: Rust dev environment"
		curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
	}
	echo "UPDATING: Rust tooling"
	. "$HOME/.cargo/env"
	rustup update
	rustup component add rust-analyzer
}

setup-terminal()
{
	dconf write /org/gnome/desktop/input-sources/xkb-options "['caps:ctrl_modifier']"
	type -p starship &>/dev/null || {
		echo "INSTALLING: Starship cross-shell prompt"
		curl -sS https://starship.rs/install.sh | sh
	}
	gh release download --clobber --repo ryanoasis/nerd-fonts --pattern UbuntuMono.tar.xz --dir ~/.local/share/fonts
	tar -xf ~/.local/share/fonts/UbuntuMono.tar.xz -C ~/.local/share/fonts
	fc-cache
}


echo 'UPDATING: APT Repository Lists'
sudo apt update &>/dev/null
echo 'UPDATING: All Installed Packages'
sudo apt dist-upgrade -y &>/dev/null
echo 'INSTALLING: Baseline Packages'
install-common-packages
echo 'INSTALLING: Extra Goodies'
type -p gh >/dev/null || install-github-cli
[ -f ~/.nvm/nvm-exec ] || install-nvm
type -p ykman >/dev/null || install-yubikey-manager
setup-rust
setup-editor
setup-terminal

#switch to starship
#echo -e "\n\nYou'll wants these fonts\n\thttps://github.com/powerline/fonts"
